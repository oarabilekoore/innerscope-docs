import './baseline.css';
export interface ApplicationConfig {
    title: string;
    icon?: string;
    routes: PageRouterConfig;
    allowzoom?: boolean;
    statusbarcolor?: string;
    scrollbarvisibility?: "shown" | "hidden";
}
export type PageRouterConfig = {
    mode: "hash" | "history";
    routes: Routes;
};
export type Routes = {
    path: string;
    component: Function;
}[];
export declare class Application {
    root: HTMLElement;
    router_map: Map<string, Function> | null;
    page_routes: Routes | null;
    router_mode: string | null;
    page_index: number;
    constructor(config?: ApplicationConfig);
    setConfig(cfg: ApplicationConfig): void;
    onExit(Fn: Function): void;
    onBack(Fn: Function): void;
    onStart(Fn: Function): void;
    onPause(Fn: Function): void;
    onResume(Fn: Function): void;
    onOffline(Fn: Function): void;
    onOnline(Fn: Function): void;
    onResize(Fn: Function): void;
    onScroll(Fn: Function): void;
    addRoute(route: string, Function: Function): void;
    openRoute(path: string): void;
    private hash_change_handler;
    private popstate_handler;
    private does_route_exist;
}
export declare function showIF(element: HTMLElement, condition: boolean): void;
export interface Parent {
    root: HTMLElement | HTMLDivElement;
    children: HTMLElement[];
    removeChildren(): void;
    appendChild(child: HTMLElement): void;
    removeChild(child: HTMLElement): void;
    insertBefore(child: HTMLElement, before: HTMLElement): void;
}
export type Layout_Direction = "TOP_TO_BOTTOM" | "BOTTOM_TO_TOP" | "LEFT_TO_RIGHT" | "RIGHT_TO_LEFT";
export type Element_Alignment = "CENTER" | "LEFT" | "BOTTOM" | "RIGHT" | "VCENTER" | "HCENTER";
export type Scroll_Direction = "HORIZONTAL" | "VERTICAL" | "BOTH";
export type Parent_Fill = "FILLXY" | "FILLX" | "FILLY";
export declare class LayoutConstructor implements Parent {
    root: HTMLElement | HTMLDivElement;
    layout: HTMLDivElement;
    children: HTMLElement[];
    style: CSSStyleDeclaration;
    constructor(parent: Parent | HTMLElement, type: string, classes?: Array<string>);
    appendChild(child: HTMLElement): void;
    removeChildren(): void;
    removeChild(child: HTMLElement): void;
    insertBefore(child: HTMLElement, before: HTMLElement): void;
    set LayoutDirection(direction: Layout_Direction);
    set ElementAlignment(alignment: Element_Alignment);
    set ParentFill(fill: Parent_Fill);
    set ScrollDirection(scrollDirection: Scroll_Direction);
    set ScrollBarVisibility(visibility: "SHOWN" | "HIDDEN");
}
export declare function LinearLayout(parent: Parent | HTMLElement, classList?: string): LayoutConstructor;
export declare function ColumnLayout(parent: Parent | HTMLElement): LayoutConstructor;
export declare function GridLayout(parent: Parent | HTMLElement): LayoutConstructor;
export type ElementFactory<T> = {
    (parent: Parent | HTMLElement): T;
    (attrs: Record<string, string>, parent: Parent | HTMLElement): T;
    (content: string, parent: Parent | HTMLElement): T;
    (content: string, attrs: Record<string, string>, parent: Parent | HTMLElement): T;
};
export declare function genericElement<T extends keyof HTMLElementTagNameMap>(tag: T): ElementFactory<HTMLElementTagNameMap[T]>;
export declare const Paragraph: ElementFactory<HTMLParagraphElement>;
export declare const Heading1: ElementFactory<HTMLHeadingElement>;
export declare const Heading2: ElementFactory<HTMLHeadingElement>;
export declare const Heading3: ElementFactory<HTMLHeadingElement>;
export declare const Heading4: ElementFactory<HTMLHeadingElement>;
export declare const Heading5: ElementFactory<HTMLHeadingElement>;
export declare const Heading6: ElementFactory<HTMLHeadingElement>;
export declare const Span: ElementFactory<HTMLSpanElement>;
export declare const Emphasis: ElementFactory<HTMLElement>;
export declare const Strong: ElementFactory<HTMLElement>;
export declare const Code: ElementFactory<HTMLElement>;
export declare const Preformatted: ElementFactory<HTMLPreElement>;
export declare const Blockquote: ElementFactory<HTMLQuoteElement>;
export declare const Quote: ElementFactory<HTMLQuoteElement>;
export declare const Cite: ElementFactory<HTMLElement>;
export declare const Definition: ElementFactory<HTMLElement>;
export declare const Abbreviation: ElementFactory<HTMLElement>;
export declare const Time: ElementFactory<HTMLTimeElement>;
export declare const Variable: ElementFactory<HTMLElement>;
export declare const SampleOutput: ElementFactory<HTMLElement>;
export declare const KeyboardInput: ElementFactory<HTMLElement>;
export declare const Subscript: ElementFactory<HTMLElement>;
export declare const Superscript: ElementFactory<HTMLElement>;
export declare const SmallText: ElementFactory<HTMLElement>;
export declare const MarkedText: ElementFactory<HTMLElement>;
export declare const DeletedText: ElementFactory<HTMLModElement>;
export declare const InsertedText: ElementFactory<HTMLModElement>;
export declare const Button: ElementFactory<HTMLButtonElement>;
export declare const TextInput: ElementFactory<HTMLInputElement>;
export declare const Checkbox: ElementFactory<HTMLInputElement>;
export declare const Radio: ElementFactory<HTMLInputElement>;
export declare const Range: ElementFactory<HTMLInputElement>;
export declare const FileInput: ElementFactory<HTMLInputElement>;
export declare const SubmitButton: ElementFactory<HTMLInputElement>;
export declare const ResetButton: ElementFactory<HTMLInputElement>;
export declare const ColorPicker: ElementFactory<HTMLInputElement>;
export declare const DatePicker: ElementFactory<HTMLInputElement>;
export declare const DateTimePicker: ElementFactory<HTMLInputElement>;
export declare const EmailInput: ElementFactory<HTMLInputElement>;
export declare const NumberInput: ElementFactory<HTMLInputElement>;
export declare const PasswordInput: ElementFactory<HTMLInputElement>;
export declare const SearchInput: ElementFactory<HTMLInputElement>;
export declare const TelInput: ElementFactory<HTMLInputElement>;
export declare const UrlInput: ElementFactory<HTMLInputElement>;
export declare const TextArea: ElementFactory<HTMLTextAreaElement>;
export declare const Select: ElementFactory<HTMLSelectElement>;
export declare const Option: ElementFactory<HTMLOptionElement>;
export declare const Label: ElementFactory<HTMLLabelElement>;
export declare const Fieldset: ElementFactory<HTMLFieldSetElement>;
export declare const Legend: ElementFactory<HTMLLegendElement>;
export declare const Progress: ElementFactory<HTMLProgressElement>;
export declare const Meter: ElementFactory<HTMLMeterElement>;
export declare const Output: ElementFactory<HTMLOutputElement>;
export declare const Image: ElementFactory<HTMLImageElement>;
export declare const Video: ElementFactory<HTMLVideoElement>;
export declare const Audio: ElementFactory<HTMLAudioElement>;
export declare const Canvas: ElementFactory<HTMLCanvasElement>;
export declare const Picture: ElementFactory<HTMLPictureElement>;
export declare const Source: ElementFactory<HTMLSourceElement>;
export declare const Track: ElementFactory<HTMLTrackElement>;
export declare const Embed: ElementFactory<HTMLEmbedElement>;
export declare const ObjectEmbed: ElementFactory<HTMLObjectElement>;
export declare const IFrame: ElementFactory<HTMLIFrameElement>;
export declare const HtmlMap: ElementFactory<HTMLMapElement>;
export declare const Area: ElementFactory<HTMLAreaElement>;
export declare const Article: ElementFactory<HTMLElement>;
export declare const Section: ElementFactory<HTMLElement>;
export declare const Nav: ElementFactory<HTMLElement>;
export declare const Header: ElementFactory<HTMLElement>;
export declare const Footer: ElementFactory<HTMLElement>;
export declare const Aside: ElementFactory<HTMLElement>;
export declare const Main: ElementFactory<HTMLElement>;
export declare const Figure: ElementFactory<HTMLElement>;
export declare const Figcaption: ElementFactory<HTMLElement>;
export declare const Details: ElementFactory<HTMLDetailsElement>;
export declare const Summary: ElementFactory<HTMLElement>;
export declare const Dialog: ElementFactory<HTMLDialogElement>;
export declare const Menu: ElementFactory<HTMLMenuElement>;
export declare const Table: ElementFactory<HTMLTableElement>;
export declare const TableHead: ElementFactory<HTMLTableSectionElement>;
export declare const TableBody: ElementFactory<HTMLTableSectionElement>;
export declare const TableRow: ElementFactory<HTMLTableRowElement>;
export declare const TableHeader: ElementFactory<HTMLTableCellElement>;
export declare const TableData: ElementFactory<HTMLTableCellElement>;
export declare const TableCaption: ElementFactory<HTMLTableCaptionElement>;
export declare const ColGroup: ElementFactory<HTMLTableColElement>;
export declare const Col: ElementFactory<HTMLTableColElement>;
export declare const OrderedList: ElementFactory<HTMLOListElement>;
export declare const UnorderedList: ElementFactory<HTMLUListElement>;
export declare const ListItem: ElementFactory<HTMLLIElement>;
export declare const DescriptionList: ElementFactory<HTMLDListElement>;
export declare const DescriptionTerm: ElementFactory<HTMLElement>;
export declare const DescriptionDetail: ElementFactory<HTMLElement>;
export declare const Form: ElementFactory<HTMLFormElement>;
export declare const LabelFor: (forId: string, content: string, parent: Parent | HTMLElement) => HTMLLabelElement;
export declare const Style: ElementFactory<HTMLStyleElement>;
export declare const Link: ElementFactory<HTMLLinkElement>;
export declare const Meta: ElementFactory<HTMLMetaElement>;
export declare const Base: ElementFactory<HTMLBaseElement>;
export declare const Title: ElementFactory<HTMLTitleElement>;
export declare const Script: ElementFactory<HTMLScriptElement>;
export declare const NoScript: ElementFactory<HTMLElement>;
export declare const Anchor: ElementFactory<HTMLAnchorElement>;
export declare const Break: ElementFactory<HTMLBRElement>;
export declare const HorizontalRule: ElementFactory<HTMLHRElement>;
export declare const Div: ElementFactory<HTMLDivElement>;
export declare const SpanElement: ElementFactory<HTMLSpanElement>;
export declare const Template: ElementFactory<HTMLTemplateElement>;
export declare const Slot: ElementFactory<HTMLSlotElement>;
export declare const DataList: ElementFactory<HTMLDataListElement>;
export declare const OutputElement: ElementFactory<HTMLOutputElement>;
