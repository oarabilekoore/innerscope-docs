/**
 * state function, is a signal and allows you to subscribe to changes on a value
 * use the useEffect signal to run the function immediatley and on value
 * change,
 * use the useSubscriber  signal to only subscribe to changes.
 */
export default function state(defaultState) {
    let reactiveProperty = defaultState;
    const subscriptions = [];
    function callEffect() {
        for (const subscriber of subscriptions) {
            subscriber();
        }
    }
    function setState(value) {
        reactiveProperty = value;
        callEffect();
    }
    function getState() {
        return reactiveProperty;
    }
    function useEffect(fn) {
        subscriptions.push(fn);
        fn();
    }
    function useSubscriber(fn) {
        subscriptions.push(fn);
    }
    return [getState, setState, useEffect, useSubscriber];
}
